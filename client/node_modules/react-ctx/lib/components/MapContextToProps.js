'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utils = require('../utils');

var utils = _interopRequireWildcard(_utils);

var _contextTypes = require('../utils/contextTypes');

var _context = require('../enhancers/context');

var _context2 = _interopRequireDefault(_context);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var warnedChildCount = false;

var createInnerComponent = function createInnerComponent(props) {
  var spec = props.contextTypes || Object.keys(utils.omit(props, ['children', 'contextTypes', 'contextNamespace']));
  var keys = Object.keys((0, _contextTypes.normalize)(spec));

  var MapContextToPropsInner = function (_Component) {
    _inherits(MapContextToPropsInner, _Component);

    function MapContextToPropsInner(childProps) {
      _classCallCheck(this, MapContextToPropsInner);

      var _this = _possibleConstructorReturn(this, (MapContextToPropsInner.__proto__ || Object.getPrototypeOf(MapContextToPropsInner)).call(this));

      _this.state = _this.buildState(childProps);
      return _this;
    }

    _createClass(MapContextToPropsInner, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextChildProps) {
        this.setState(this.buildState(nextChildProps));
      }
    }, {
      key: 'buildState',
      value: function buildState(childProps) {
        return { childContextProps: utils.pick(childProps, keys) };
      }
    }, {
      key: 'render',
      value: function render() {
        var children = this.props.children;
        var childContextProps = this.state.childContextProps;


        if (_react.Children.count(children) !== 1) {
          if (!warnedChildCount) {
            warnedChildCount = true;

            console.warn('Must return exactly 1 child from MapContextToProps');
          }

          return null;
        }

        return (0, _react.cloneElement)(_react.Children.only(children), childContextProps);
      }
    }]);

    return MapContextToPropsInner;
  }(_react.Component);

  return (0, _context2.default)(spec, props.contextNamespace)(MapContextToPropsInner);
};

var MapContextToProps = function (_Component2) {
  _inherits(MapContextToProps, _Component2);

  function MapContextToProps() {
    var _ref;

    var _temp, _this2, _ret;

    _classCallCheck(this, MapContextToProps);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = MapContextToProps.__proto__ || Object.getPrototypeOf(MapContextToProps)).call.apply(_ref, [this].concat(args))), _this2), _this2.InnerComponent = createInnerComponent(_this2.props), _temp), _possibleConstructorReturn(_this2, _ret);
  }

  _createClass(MapContextToProps, [{
    key: 'render',
    value: function render() {
      var InnerComponent = this.InnerComponent;
      var children = this.props.children;


      return _react2.default.createElement(
        InnerComponent,
        null,
        children
      );
    }
  }]);

  return MapContextToProps;
}(_react.Component);

exports.default = MapContextToProps;