{"ast":null,"code":"var _jsxFileName = \"/Users/kavin11/mern-money/client/src/components/ChartData.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTransactions } from \"../actions/transactionActions\";\nimport { Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Pie } from \"react-chartjs-2\";\n\nclass ChartData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.data = {\n      labels: [\"Monday\", \"Tuesday\"],\n      datasets: [{\n        label: \"Transactions\",\n        date: [20, 50],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)']\n      }]\n    };\n  }\n\n  render() {\n    const {\n      transactions\n    } = this.props.transaction;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: this.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nChartData.propTypes = {\n  getTransactions: PropTypes.func.isRequired,\n  transaction: PropTypes.object.isRequired,\n  getStats: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  transaction: state.transaction\n});\n\nexport default connect(mapStateToProps, {\n  getTransactions\n})(ChartData);","map":{"version":3,"sources":["/Users/kavin11/mern-money/client/src/components/ChartData.js"],"names":["React","Component","connect","getTransactions","Container","PropTypes","Pie","ChartData","data","labels","datasets","label","date","backgroundColor","render","transactions","props","transaction","propTypes","func","isRequired","object","getStats","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BO,IAF6B,GAExB;AACDC,MAAAA,MAAM,EAAC,CAAC,QAAD,EAAW,SAAX,CADN;AAEDC,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAE,cADD;AAENC,QAAAA,IAAI,EAAC,CAAC,EAAD,EAAI,EAAJ,CAFC;AAGNC,QAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa;AAHX,OAAD;AAFR,KAFwB;AAAA;;AAa7BC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKC,KAAL,CAAWC,WAAlC;AAGA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKT,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAtB4B;;AAyBjCD,SAAS,CAACW,SAAV,GAAsB;AAClBf,EAAAA,eAAe,EAAEE,SAAS,CAACc,IAAV,CAAeC,UADd;AAElBH,EAAAA,WAAW,EAAEZ,SAAS,CAACgB,MAAV,CAAiBD,UAFZ;AAGlBE,EAAAA,QAAQ,EAAEjB,SAAS,CAACc,IAAV,CAAeC;AAHP,CAAtB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,WAAW,EAAEO,KAAK,CAACP;AADW,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA8CI,SAA9C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTransactions } from \"../actions/transactionActions\";\nimport {Container} from \"reactstrap\"\nimport PropTypes from \"prop-types\";\nimport { Pie } from \"react-chartjs-2\";\n\nclass ChartData extends Component{\n    \n    data={\n        labels:[\"Monday\", \"Tuesday\"],\n        datasets:[{\n            label: \"Transactions\",\n            date:[20,50],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n            ]\n        }]\n    }\n    render(){\n        const {transactions} = this.props.transaction\n\n\n        return(\n            <Container>\n                <Pie data={this.data} />\n            </Container>\n        )\n    }\n}\n\nChartData.propTypes = {\n    getTransactions: PropTypes.func.isRequired,\n    transaction: PropTypes.object.isRequired,\n    getStats: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    transaction: state.transaction\n\n})\n\nexport default connect(mapStateToProps, { getTransactions })(ChartData)"]},"metadata":{},"sourceType":"module"}