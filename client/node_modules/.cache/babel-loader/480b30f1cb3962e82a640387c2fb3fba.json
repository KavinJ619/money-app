{"ast":null,"code":"var _jsxFileName = \"/Users/kavin11/mern-money/client/src/components/TransactionList.js\";\nimport React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport uuid from 'uuid/v1';\nimport { FaMinus } from 'react-icons/fa';\nimport { connect } from \"react-redux\";\nimport { getTransactions } from \"../actions/transactionActions\";\nimport PropTypes from \"prop-types\";\n\nclass TransactionList extends Component {\n  componentDidMount() {\n    this.props.getTransactions();\n  }\n\n  render() {\n    const {\n      transactions\n    } = this.props.transaction;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const title = prompt('Enter transaction title');\n        const amount = parseInt(prompt(\"Enter Transaction Amount\"));\n\n        if (title && amount) {\n          this.setState(state => ({\n            transactions: [...state.transactions, {\n              id: uuid(),\n              title,\n              amount\n            }]\n          }));\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Add Transaction\"), transactions.map(({\n      id,\n      title,\n      amount,\n      date\n    }) => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"remove-button\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          transactions: state.transactions.filter(transaction => transaction.id !== id)\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-list-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, amount), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-list-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, Date.now()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posneg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nTransactionList.propTypes = {\n  getTransactions: PropTypes.func.isRequired,\n  transaction: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  transaction: state.transaction\n});\n\nexport default connect(mapStateToProps, {\n  getTransactions\n})(TransactionList);","map":{"version":3,"sources":["/Users/kavin11/mern-money/client/src/components/TransactionList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","FaMinus","connect","getTransactions","PropTypes","TransactionList","componentDidMount","props","render","transactions","transaction","marginBottom","title","prompt","amount","parseInt","setState","state","id","map","date","filter","Date","now","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAN,SAA8BZ,SAA9B,CAAuC;AAEnCa,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,eAAX;AACH;;AAIDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKF,KAAL,CAAWG,WAApC;AACA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAC;AAAd,OAA/B;AAAsD,MAAA,OAAO,EAAE,MAAM;AACjE,cAAMC,KAAK,GAACC,MAAM,CAAC,yBAAD,CAAlB;AACA,cAAMC,MAAM,GAACC,QAAQ,CAACF,MAAM,CAAC,0BAAD,CAAP,CAArB;;AACA,YAAID,KAAK,IAAIE,MAAb,EAAoB;AAChB,eAAKE,QAAL,CAAcC,KAAK,KAAK;AACpBR,YAAAA,YAAY,EAAE,CAAC,GAAGQ,KAAK,CAACR,YAAV,EAAwB;AAAES,cAAAA,EAAE,EAAElB,IAAI,EAAV;AAAcY,cAAAA,KAAd;AAAqBE,cAAAA;AAArB,aAAxB;AADM,WAAL,CAAnB;AAGH;AACJ,OARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAUKL,YAAY,CAACU,GAAb,CAAiB,CAAE;AAACD,MAAAA,EAAD;AAAIN,MAAAA,KAAJ;AAAUE,MAAAA,MAAV;AAAiBM,MAAAA;AAAjB,KAAF,kBACd,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEF,EAApB;AAAwB,MAAA,OAAO,EAAE,GAAjC;AAAsC,MAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,OAAO,EAAE,MAAM;AACX,aAAKF,QAAL,CAAcC,KAAK,KAAK;AACpBR,UAAAA,YAAY,EAAEQ,KAAK,CAACR,YAAN,CAAmBY,MAAnB,CAA0BX,WAAW,IAAIA,WAAW,CAACQ,EAAZ,KAAmBA,EAA5D;AADM,SAAL,CAAnB;AAGH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KADL,CAZJ,eAeI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,MADL,CAfJ,eAkBI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKQ,IAAI,CAACC,GAAL,EADL,CAlBJ,eAqBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,CADJ,CADH,CAVL,CADJ;AA4CH;;AAtDkC;;AA0DvClB,eAAe,CAACmB,SAAhB,GAA4B;AACxBrB,EAAAA,eAAe,EAAEC,SAAS,CAACqB,IAAV,CAAeC,UADR;AAExBhB,EAAAA,WAAW,EAAEN,SAAS,CAACuB,MAAV,CAAiBD;AAFN,CAA5B;;AAKA,MAAME,eAAe,GAAIX,KAAD,KAAY;AAChCP,EAAAA,WAAW,EAAEO,KAAK,CAACP;AADa,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA;AAAD,CAAlB,CAAP,CAA4CE,eAA5C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\nimport uuid from 'uuid/v1'\nimport { FaMinus } from 'react-icons/fa';\nimport { connect } from \"react-redux\"\nimport { getTransactions } from \"../actions/transactionActions\"\nimport PropTypes from \"prop-types\"\n\nclass TransactionList extends Component{\n\n    componentDidMount(){\n        this.props.getTransactions();\n    }\n    \n\n\n    render() {\n        const { transactions } = this.props.transaction\n        return(\n            <Container>\n                <Button color=\"primary\" style={{marginBottom:'2rem'}} onClick={() => {\n                    const title=prompt('Enter transaction title')\n                    const amount=parseInt(prompt(\"Enter Transaction Amount\"))\n                    if (title && amount){\n                        this.setState(state => ({\n                            transactions: [...state.transactions, { id: uuid(), title, amount }]\n                        }))\n                    }\n                }}>Add Transaction</Button>\n                {transactions.map(( {id,title,amount,date}) => (\n                    <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                        <div className=\"transaction-item\">\n                            <Button \n                                className=\"remove-button\"\n                                color=\"danger\" \n                                size=\"sm\"\n                                onClick={() => {\n                                    this.setState(state => ({\n                                        transactions: state.transactions.filter(transaction => transaction.id !== id)\n                                    }))\n                                }}>\n                                &times;\n                            </Button>\n                            <div className=\"transaction-list-title\">\n                                {title}\n                            </div>\n                            <div className=\"transaction-list-amount\">\n                                {amount}\n                            </div>\n                            <div className=\"transaction-list-date\">\n                                {Date.now()}\n                            </div>\n                            <div className=\"posneg\" />\n                            \n                        </div>\n                        \n                    </CSSTransition>\n                ))}\n                \n                \n            </Container>\n        )\n    }\n\n}\n\nTransactionList.propTypes = {\n    getTransactions: PropTypes.func.isRequired,\n    transaction: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    transaction: state.transaction\n})\n\n\nexport default connect(mapStateToProps, {getTransactions})(TransactionList);"]},"metadata":{},"sourceType":"module"}