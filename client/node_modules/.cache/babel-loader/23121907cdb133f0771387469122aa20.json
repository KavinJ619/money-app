{"ast":null,"code":"import _classCallCheck from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Label,Input}from\"reactstrap\";import{connect}from\"react-redux\";import{addTransaction,getStats,getTransactions}from\"../actions/transactionActions\";var TransactionModal=/*#__PURE__*/function(_Component){_inherits(TransactionModal,_Component);var _super=_createSuper(TransactionModal);function TransactionModal(){var _this;_classCallCheck(this,TransactionModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={modal:false,title:'',amount:0};_this.toggle=function(){_this.setState({modal:!_this.state.modal});};_this.onChangeTitle=function(e){_this.setState({title:e.target.value});};_this.onChangeAmount=function(e){_this.setState({amount:e.target.value});};_this.onSubmitAdd=function(e){e.preventDefault();var newTransaction={title:_this.state.title,amount:_this.state.amount};_this.props.addTransaction(newTransaction);_this.props.getStats();_this.toggle();};return _this;}_createClass(TransactionModal,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getTransactions();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{className:\"addtransButton\",onClick:this.toggle},\"Add Transaction\"),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggle},\"Add a Transaction!\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:this.onSubmitAdd},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"title\",id:\"transaction\",placeholder:\"Enter Transaction Title\",onChange:this.onChangeTitle})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"title\",id:\"transaction\",placeholder:\"Enter Transaction Amount (Start with - If Negative)\",onChange:this.onChangeAmount})),/*#__PURE__*/React.createElement(Button,{className:\"addTransButtonModal\"},\"Add Transaction\")))));}}]);return TransactionModal;}(Component);var mapStateToProps=function mapStateToProps(state){return{transaction:state.transaction};};export default connect(mapStateToProps,{addTransaction:addTransaction,getStats:getStats,getTransactions:getTransactions})(TransactionModal);","map":{"version":3,"sources":["/Users/kavin11/mern-money/client/src/components/TransactionModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","addTransaction","getStats","getTransactions","TransactionModal","state","modal","title","amount","toggle","setState","onChangeTitle","e","target","value","onChangeAmount","onSubmitAdd","preventDefault","newTransaction","props","mapStateToProps","transaction"],"mappings":"4kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACIC,MADJ,CAEIC,KAFJ,CAGIC,WAHJ,CAIIC,SAJJ,CAKIC,IALJ,CAMIC,SANJ,CAOIC,KAPJ,CAQIC,KARJ,KASO,YATP,CAUA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,CAAyBC,QAAzB,CAAmCC,eAAnC,KAA0D,+BAA1D,C,GAGMC,CAAAA,gB,mWACFC,K,CAAO,CACHC,KAAK,CAAC,KADH,CAEHC,KAAK,CAAE,EAFJ,CAGHC,MAAM,CAAC,CAHJ,C,OAUPC,M,CAAS,UAAM,CACX,MAAKC,QAAL,CAAc,CACVJ,KAAK,CAAE,CAAC,MAAKD,KAAL,CAAWC,KADT,CAAd,EAGH,C,OAEDK,a,CAAgB,SAACC,CAAD,CAAM,CAClB,MAAKF,QAAL,CAAc,CACVH,KAAK,CAAEK,CAAC,CAACC,MAAF,CAASC,KADN,CAAd,EAGH,C,OAEDC,c,CAAiB,SAACH,CAAD,CAAM,CACnB,MAAKF,QAAL,CAAc,CACVF,MAAM,CAAEI,CAAC,CAACC,MAAF,CAASC,KADP,CAAd,EAGH,C,OAKDE,W,CAAc,SAAAJ,CAAC,CAAI,CACfA,CAAC,CAACK,cAAF,GAEA,GAAMC,CAAAA,cAAc,CAAG,CACnBX,KAAK,CAAE,MAAKF,KAAL,CAAWE,KADC,CAEnBC,MAAM,CAAE,MAAKH,KAAL,CAAWG,MAFA,CAAvB,CAKA,MAAKW,KAAL,CAAWlB,cAAX,CAA0BiB,cAA1B,EACA,MAAKC,KAAL,CAAWjB,QAAX,GACA,MAAKO,MAAL,GACH,C,yGApCkB,CACf,KAAKU,KAAL,CAAWhB,eAAX,GACH,C,uCAqCO,CACJ,mBACI,4CACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAE,KAAKM,MAAjD,oBADJ,cAII,oBAAC,KAAD,EACA,MAAM,CAAE,KAAKJ,KAAL,CAAWC,KADnB,CAEA,MAAM,CAAE,KAAKG,MAFb,eAGI,oBAAC,WAAD,EAAa,MAAM,CAAE,KAAKA,MAA1B,uBAHJ,cAMI,oBAAC,SAAD,mBACI,oBAAC,IAAD,EAAM,QAAQ,CAAE,KAAKO,WAArB,eACI,oBAAC,SAAD,mBACI,oBAAC,KAAD,EACA,IAAI,CAAC,MADL,CAEA,IAAI,CAAC,OAFL,CAGA,EAAE,CAAC,aAHH,CAIA,WAAW,CAAC,yBAJZ,CAKA,QAAQ,CAAE,KAAKL,aALf,EADJ,CADJ,cAUI,oBAAC,SAAD,mBACI,oBAAC,KAAD,EACA,IAAI,CAAC,MADL,CAEA,IAAI,CAAC,OAFL,CAGA,EAAE,CAAC,aAHH,CAIA,WAAW,CAAC,qDAJZ,CAKA,QAAQ,CAAE,KAAKI,cALf,EADJ,CAVJ,cAmBI,oBAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,oBAnBJ,CADJ,CANJ,CAJJ,CADJ,CAuCH,C,8BAtF0BxB,S,EA+F/B,GAAM6B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAf,KAAK,QAAK,CAC9BgB,WAAW,CAAEhB,KAAK,CAACgB,WADW,CAAL,EAA7B,CAKA,cAAerB,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAAEnB,cAAc,CAAdA,cAAF,CAAkBC,QAAQ,CAARA,QAAlB,CAA4BC,eAAe,CAAfA,eAA5B,CAAlB,CAAP,CAAwEC,gBAAxE,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addTransaction, getStats, getTransactions } from \"../actions/transactionActions\"\nimport PropTypes from \"prop-types\"\n\nclass TransactionModal extends Component{\n    state ={\n        modal:false,\n        title: '',\n        amount:0\n    }\n\n    componentDidMount(){\n        this.props.getTransactions();\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    onChangeTitle = (e) =>{\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    onChangeAmount = (e) =>{\n        this.setState({\n            amount: e.target.value\n        })\n    }\n\n    \n\n\n    onSubmitAdd = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            title: this.state.title,\n            amount: this.state.amount,\n        }\n        \n        this.props.addTransaction(newTransaction);\n        this.props.getStats();\n        this.toggle();\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Button className=\"addtransButton\" onClick={this.toggle}>\n                    Add Transaction\n                </Button>\n                <Modal\n                isOpen={this.state.modal}\n                toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>\n                        Add a Transaction!\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmitAdd}>\n                            <FormGroup>\n                                <Input \n                                type=\"text\"\n                                name=\"title\"\n                                id=\"transaction\"\n                                placeholder=\"Enter Transaction Title\"\n                                onChange={this.onChangeTitle}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input \n                                type=\"text\"\n                                name=\"title\"\n                                id=\"transaction\"\n                                placeholder=\"Enter Transaction Amount (Start with - If Negative)\"\n                                onChange={this.onChangeAmount}\n                                />\n                            </FormGroup>\n                            <Button className=\"addTransButtonModal\">\n                                Add Transaction\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nTransactionModal.propTypes = {\n    getTransactions: PropTypes.func.isRequired,\n    transaction: PropTypes.object.isRequired,\n    getStats: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    transaction: state.transaction\n\n})\n\nexport default connect(mapStateToProps, { addTransaction, getStats, getTransactions })(TransactionModal)"]},"metadata":{},"sourceType":"module"}