{"ast":null,"code":"import _toConsumableArray from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/kavin11/mern-money/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import uuid from'uuid/v1';import{GET_TRANSACTIONS,ADD_TRANSACTION,DELETE_TRANSACTION,GET_STATS,TRANSACTIONS_LOADING}from\"../actions/types\";var initialState={transactions:[],loading:false};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_TRANSACTIONS:return _objectSpread({},state,{transactions:action.payload,loading:false});case DELETE_TRANSACTION:return _objectSpread({},state,{transactions:state.transactions.filter(function(transaction){return transaction._id!==action.payload;})});case ADD_TRANSACTION:return _objectSpread({},state,{transactions:[action.payload].concat(_toConsumableArray(state.transactions))});case GET_STATS:var totalDebit=0;state.transactions.map(function(_ref){var amount=_ref.amount;totalDebit+=parseFloat(amount);});totalDebit=totalDebit.toFixed(2);state.remainder=totalDebit;var moneySpent=0;state.transactions.map(function(_ref2){var amount=_ref2.amount;if(amount<0){moneySpent+=parseFloat(amount);}});moneySpent=moneySpent.toFixed(2);state.debit=moneySpent;case TRANSACTIONS_LOADING:return _objectSpread({},state,{loading:true});default:return state;}}","map":{"version":3,"sources":["/Users/kavin11/mern-money/client/src/reducers/transactionReducer.js"],"names":["uuid","GET_TRANSACTIONS","ADD_TRANSACTION","DELETE_TRANSACTION","GET_STATS","TRANSACTIONS_LOADING","initialState","transactions","loading","state","action","type","payload","filter","transaction","_id","totalDebit","map","amount","parseFloat","toFixed","remainder","moneySpent","debit"],"mappings":"qTAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,CAA2BC,eAA3B,CAA4CC,kBAA5C,CAAgEC,SAAhE,CAA2EC,oBAA3E,KAAsG,kBAAtG,CAEA,GAAMC,CAAAA,YAAY,CAAE,CAChBC,YAAY,CAAE,EADE,CAEhBC,OAAO,CAAC,KAFQ,CAApB,CAKA,cAAe,WAAoC,IAA3BC,CAAAA,KAA2B,2DAArBH,YAAqB,IAAPI,CAAAA,MAAO,2CAC/C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKV,CAAAA,gBAAL,CACI,wBACOQ,KADP,EAEIF,YAAY,CAAEG,MAAM,CAACE,OAFzB,CAGIJ,OAAO,CAAC,KAHZ,GAKJ,IAAKL,CAAAA,kBAAL,CACI,wBACOM,KADP,EAEIF,YAAY,CAAEE,KAAK,CAACF,YAAN,CAAmBM,MAAnB,CAA0B,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAACC,GAAZ,GAAoBL,MAAM,CAACE,OAA/B,EAArC,CAFlB,GAIJ,IAAKV,CAAAA,eAAL,CACI,wBACOO,KADP,EAEIF,YAAY,EAAGG,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACF,YAA5B,EAFhB,GAIJ,IAAKH,CAAAA,SAAL,CACI,GAAIY,CAAAA,UAAU,CAAC,CAAf,CACAP,KAAK,CAACF,YAAN,CAAmBU,GAAnB,CAAuB,cAAc,IAAZC,CAAAA,MAAY,MAAZA,MAAY,CACjCF,UAAU,EAAEG,UAAU,CAACD,MAAD,CAAtB,CACH,CAFD,EAGAF,UAAU,CAACA,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAAX,CACAX,KAAK,CAACY,SAAN,CAAgBL,UAAhB,CAEA,GAAIM,CAAAA,UAAU,CAAC,CAAf,CACAb,KAAK,CAACF,YAAN,CAAmBU,GAAnB,CAAuB,eAAc,IAAZC,CAAAA,MAAY,OAAZA,MAAY,CACjC,GAAIA,MAAM,CAAG,CAAb,CAAgB,CACZI,UAAU,EAAEH,UAAU,CAACD,MAAD,CAAtB,CACH,CACJ,CAJD,EAKAI,UAAU,CAAEA,UAAU,CAACF,OAAX,CAAmB,CAAnB,CAAZ,CACAX,KAAK,CAACc,KAAN,CAAYD,UAAZ,CAEJ,IAAKjB,CAAAA,oBAAL,CACI,wBACOI,KADP,EAEID,OAAO,CAAC,IAFZ,GAKJ,QACI,MAAOC,CAAAA,KAAP,CAzCR,CA2CH","sourcesContent":["import uuid from 'uuid/v1'\nimport { GET_TRANSACTIONS, ADD_TRANSACTION, DELETE_TRANSACTION, GET_STATS, TRANSACTIONS_LOADING} from \"../actions/types\"\n\nconst initialState ={\n    transactions: [],\n    loading:false\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_TRANSACTIONS:\n            return{\n                ...state,\n                transactions: action.payload,\n                loading:false\n            }\n        case DELETE_TRANSACTION:\n            return{\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n        case ADD_TRANSACTION:\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        case GET_STATS:\n            let totalDebit=0;\n            state.transactions.map(({amount}) => {\n                totalDebit+=parseFloat(amount)\n            });\n            totalDebit=totalDebit.toFixed(2);\n            state.remainder=totalDebit;\n\n            let moneySpent=0;\n            state.transactions.map(({amount}) => {\n                if (amount < 0 ){\n                    moneySpent+=parseFloat(amount)\n                }\n            });\n            moneySpent= moneySpent.toFixed(2)\n            state.debit=moneySpent\n            \n        case TRANSACTIONS_LOADING:\n            return{\n                ...state,\n                loading:true\n            }\n            \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}